{
  "version": 3,
  "sources": [
    "../src/index.tsx"
  ],
  "names": [
    "React",
    "forwardRef",
    "props",
    "ref",
    "prefixCls",
    "_",
    "value",
    "padding",
    "minHeight",
    "placeholder",
    "language",
    "className",
    "style",
    "onChange",
    "other",
    "setValue",
    "textRef",
    "current",
    "contentStyle",
    "paddingTop",
    "paddingRight",
    "paddingBottom",
    "paddingLeft",
    "htmlStr",
    "String",
    "preView",
    "styles",
    "editor",
    "__html",
    "container",
    "evn",
    "onKeyDown",
    "textarea",
    "WebkitTextFillColor",
    "target"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAGA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;4BAkBeA,eAAMC,UAAN,CAA+D,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC5F,yBAWID,KAXJ,CACEE,SADF;AAAA,MACEA,SADF,iCACc,aADd;AAAA,MAESC,CAFT,GAWIH,KAXJ,CAEEI,KAFF;AAAA,uBAWIJ,KAXJ,CAGEK,OAHF;AAAA,MAGEA,OAHF,+BAGY,EAHZ;AAAA,yBAWIL,KAXJ,CAIEM,SAJF;AAAA,MAIEA,SAJF,iCAIc,EAJd;AAAA,MAKEC,WALF,GAWIP,KAXJ,CAKEO,WALF;AAAA,MAMEC,QANF,GAWIR,KAXJ,CAMEQ,QANF;AAAA,MAOEC,SAPF,GAWIT,KAXJ,CAOES,SAPF;AAAA,MAQEC,KARF,GAWIV,KAXJ,CAQEU,KARF;AAAA,MASEC,SATF,GAWIX,KAXJ,CASEW,QATF;AAAA,MAUKC,KAVL,0CAWIZ,KAXJ;;AAaA,kBAA0B,qBAASA,KAAK,CAACI,KAAN,IAAe,EAAxB,CAA1B;AAAA;AAAA,MAAOA,KAAP;AAAA,MAAcS,QAAd;;AACA,wBAAU;AAAA,WAAMA,QAAQ,CAACb,KAAK,CAACI,KAAN,IAAe,EAAhB,CAAd;AAAA,GAAV,EAA6C,CAACJ,KAAK,CAACI,KAAP,CAA7C;AACA,MAAMU,OAAO,GAAG,mBAA4B,IAA5B,CAAhB;AACA,kCAA8Db,GAA9D,EAAmE;AAAA,WAAMa,OAAO,CAACC,OAAd;AAAA,GAAnE;AAEA,MAAMC,YAAY,GAAG;AACnBC,IAAAA,UAAU,EAAEZ,OADO;AAEnBa,IAAAA,YAAY,EAAEb,OAFK;AAGnBc,IAAAA,aAAa,EAAEd,OAHI;AAInBe,IAAAA,WAAW,EAAEf;AAJM,GAArB;AAOA,MAAMgB,OAAO,GAAG,oBACd;AAAA,WACE,8DACiCb,QAAQ,8BAAsBA,QAAtB,UAAoC,EAD7E,eACoF,uBAChFc,MAAM,CAAClB,KAAK,IAAI,EAAV,CAD0E,CADpF,yBADF;AAAA,GADc,EAOd,CAACA,KAAD,EAAQI,QAAR,CAPc,CAAhB;AASA,MAAMe,OAAO,GAAG,oBACd;AAAA,wBACE;AACE,MAAA,KAAK,0FAAOC,MAAM,CAACC,MAAd,GAAyBT,YAAzB;AAAuCV,QAAAA,SAAS,EAATA;AAAvC,QADP;AAEE,MAAA,SAAS,YAAKJ,SAAL,sBAA0BM,QAAQ,sBAAeA,QAAf,IAA4B,EAA9D,CAFX;AAGE,MAAA,uBAAuB,EAAE;AACvBkB,QAAAA,MAAM,EAAEL;AADe;AAH3B,MADF;AAAA,GADc,EAUd;AACA,GAACnB,SAAD,EAAYM,QAAZ,EAAsBa,OAAtB,CAXc,CAAhB;AAcA,sBACE;AAAK,IAAA,KAAK,8DAAOG,MAAM,CAACG,SAAd,GAA4BjB,KAA5B,CAAV;AAA+C,IAAA,SAAS,YAAKR,SAAL,cAAkBO,SAAS,IAAI,EAA/B,CAAxD;AAAA,4BACE;AACE,MAAA,YAAY,EAAC,KADf;AAEE,MAAA,WAAW,EAAC,KAFd;AAGE,MAAA,UAAU,EAAC,OAHb;AAIE,MAAA,cAAc,EAAC;AAJjB,OAKMG,KALN;AAME,MAAA,WAAW,EAAEL,WANf;AAOE,MAAA,SAAS,EAAE,mBAACqB,GAAD,EAAS;AAClB,gCAAUA,GAAV;AACAhB,QAAAA,KAAK,CAACiB,SAAN,IAAmBjB,KAAK,CAACiB,SAAN,CAAgBD,GAAhB,CAAnB;AACD,OAVH;AAWE,MAAA,KAAK,sHACAJ,MAAM,CAACC,MADP,GAEAD,MAAM,CAACM,QAFP,GAGAd,YAHA;AAIHV,QAAAA,SAAS,EAATA;AAJG,SAKCC,WAAW,IAAI,CAACH,KAAhB,GAAwB;AAAE2B,QAAAA,mBAAmB,EAAE;AAAvB,OAAxB,GAA6D,EAL9D,CAXP;AAkBE,MAAA,GAAG,EAAEjB,OAlBP;AAmBE,MAAA,QAAQ,EAAE,kBAACc,GAAD,EAAS;AACjBf,QAAAA,QAAQ,CAACe,GAAG,CAACI,MAAJ,CAAW5B,KAAZ,CAAR;AACAO,QAAAA,SAAQ,IAAIA,SAAQ,CAACiB,GAAD,CAApB;AACD,OAtBH;AAuBE,MAAA,SAAS,YAAK1B,SAAL,UAvBX;AAwBE,MAAA,KAAK,EAAEE;AAxBT,OADF,EA2BGmB,OA3BH;AAAA,IADF;AA+BD,CAhFc,C",
  "sourcesContent": [
    "import React, { useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { processHtml, htmlEncode } from './utils';\nimport shortcuts from './shortcuts';\nimport * as styles from './styles';\nimport './style/index.less';\n\nexport * from './SelectionText';\n\nexport interface TextareaCodeEditorProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\n  prefixCls?: string;\n  /**\n   * Set what programming language the code belongs to.\n   */\n  language?: string;\n  /**\n   * Optional padding for code. Default: `10`.\n   */\n  padding?: number;\n  /**\n   * The minimum height of the editor. Default: `16`.\n   */\n  minHeight?: number;\n}\n\nexport default React.forwardRef<HTMLTextAreaElement, TextareaCodeEditorProps>((props, ref) => {\n  const {\n    prefixCls = 'w-tc-editor',\n    value: _,\n    padding = 10,\n    minHeight = 16,\n    placeholder,\n    language,\n    className,\n    style,\n    onChange,\n    ...other\n  } = props;\n\n  const [value, setValue] = useState(props.value || '');\n  useEffect(() => setValue(props.value || ''), [props.value]);\n  const textRef = useRef<HTMLTextAreaElement>(null);\n  useImperativeHandle<HTMLTextAreaElement, HTMLTextAreaElement>(ref, () => textRef.current!);\n\n  const contentStyle = {\n    paddingTop: padding,\n    paddingRight: padding,\n    paddingBottom: padding,\n    paddingLeft: padding,\n  };\n\n  const htmlStr = useMemo(\n    () =>\n      processHtml(\n        `<pre aria-hidden=true><code ${language ? `class=\"language-${language}\"` : ''} >${htmlEncode(\n          String(value || ''),\n        )}</code><br /></pre>`,\n      ),\n    [value, language],\n  );\n  const preView = useMemo(\n    () => (\n      <div\n        style={{ ...styles.editor, ...contentStyle, minHeight }}\n        className={`${prefixCls}-preview ${language ? `language-${language}` : ''}`}\n        dangerouslySetInnerHTML={{\n          __html: htmlStr,\n        }}\n      />\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [prefixCls, language, htmlStr],\n  );\n\n  return (\n    <div style={{ ...styles.container, ...style }} className={`${prefixCls} ${className || ''}`}>\n      <textarea\n        autoComplete=\"off\"\n        autoCorrect=\"off\"\n        spellCheck=\"false\"\n        autoCapitalize=\"off\"\n        {...other}\n        placeholder={placeholder}\n        onKeyDown={(evn) => {\n          shortcuts(evn);\n          other.onKeyDown && other.onKeyDown(evn);\n        }}\n        style={{\n          ...styles.editor,\n          ...styles.textarea,\n          ...contentStyle,\n          minHeight,\n          ...(placeholder && !value ? { WebkitTextFillColor: 'inherit' } : {}),\n        }}\n        ref={textRef}\n        onChange={(evn) => {\n          setValue(evn.target.value);\n          onChange && onChange(evn);\n        }}\n        className={`${prefixCls}-text`}\n        value={value}\n      />\n      {preView}\n    </div>\n  );\n});\n"
  ]
}