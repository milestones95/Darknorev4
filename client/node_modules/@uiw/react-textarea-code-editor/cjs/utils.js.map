{
  "version": 3,
  "sources": [
    "../src/utils.ts"
  ],
  "names": [
    "processHtml",
    "html",
    "data",
    "fragment",
    "use",
    "rehypePrism",
    "ignoreMissing",
    "processSync",
    "toString",
    "htmlEncode",
    "sHtml",
    "replace",
    "c",
    "stopPropagation",
    "e",
    "preventDefault"
  ],
  "mappings": ";;;;;;;;;;;AAAA;;AAEA;;AADA;AAGO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAkB;AAC3C,SAAO,sBACJC,IADI,CACC,UADD,EACa;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GADb,EAEJC,GAFI,CAEAC,oBAFA,EAEa;AAAEC,IAAAA,aAAa,EAAE;AAAjB,GAFb,EAGJC,WAHI,WAGWN,IAHX,GAIJO,QAJI,EAAP;AAKD,CANM,C,CAQP;AACA;AACA;AACA;AACA;AACA;;;;;AAEO,SAASC,UAAT,CAAoBC,KAApB,EAAmC;AACxC,SAAOA,KAAK,CAACC,OAAN,CACL,SADK,EAEL,UAACC,CAAD;AAAA,WAAiB;AAAE,WAAK,MAAP;AAAe,WAAK,MAApB;AAA4B,WAAK,OAAjC;AAA0C,WAAK;AAA/C,KAAD,CAAsFA,CAAtF,CAAhB;AAAA,GAFK,CAAP;AAID;;AAEM,SAASC,eAAT,CAAyBC,CAAzB,EAAsE;AAC3EA,EAAAA,CAAC,CAACD,eAAF;AACAC,EAAAA,CAAC,CAACC,cAAF;AACD",
  "sourcesContent": [
    "import { rehype } from 'rehype';\n// @ts-ignore\nimport rehypePrism from '@mapbox/rehype-prism';\n\nexport const processHtml = (html: string) => {\n  return rehype()\n    .data('settings', { fragment: true })\n    .use(rehypePrism, { ignoreMissing: true })\n    .processSync(`${html}`)\n    .toString();\n};\n\n// function htmlEncode(html: string) {\n//   const temp = document.createElement ('div');\n//   (temp.textContent !== undefined) ? (temp.textContent = html) : (temp.innerText = html);\n//   const output = temp.innerHTML;\n//   return output;\n// }\n\nexport function htmlEncode(sHtml: string) {\n  return sHtml.replace(\n    /[<>&\"]/g,\n    (c: string) => (({ '<': '&lt;', '>': '&gt;', '&': '&amp;', '\"': '&quot;' } as Record<string, string>)[c]),\n  );\n}\n\nexport function stopPropagation(e: React.KeyboardEvent<HTMLTextAreaElement>) {\n  e.stopPropagation();\n  e.preventDefault();\n}\n"
  ]
}